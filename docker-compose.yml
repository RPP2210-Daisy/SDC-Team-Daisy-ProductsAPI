version: '3.8'
services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    deploy:
      placement:
        constraints: [node.role == manager]
  server:
    image: kahlstorf1/sdcserver:latest
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - DB_HOST=db
      - NEW_RELIC_APP_NAME=sdc
    secrets:
      - source: postgres_user
        target: postgres_user
      - source: postgres_password
        target: postgres_password
      - source: postgres_db
        target: postgres_db
      - source: NEW_RELIC_LICENSE_KEY
        target: NEW_RELIC_LICENSE_KEY
    deploy:
      replicas: 5
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  db:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
    volumes:
      - /mnt/efs/fs1/aerio_dump.sql:/docker-entrypoint-initdb.d/aerio_dump.sql
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.db == true]
      restart_policy:
        condition: on-failure
volumes:
  db_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=fs-03d1ec6daf915ac10.efs.us-east-1.amazonaws.com,nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
      device: :/
secrets:
  postgres_user:
    external: true
  postgres_password:
    external: true
  postgres_db:
    external: true
  NEW_RELIC_LICENSE_KEY:
    external: true
